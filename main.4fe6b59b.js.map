{"version":3,"sources":["js/modules/serverComm.js","js/modules/helpers.js","js/modules/gameField.js","js/main.js"],"names":["serverComm","URL","fieldData","response","fetch","method","body","JSON","stringify","result","json","document","querySelector","removeElem","elemClass","remove","setSessionGridArray","array","sessionStorage","setItem","getSessionGridArray","parse","getItem","gameURL","elemCoefficient","hexGridArray","gameOver","generateField","fieldSize","gridArray","i","j","k","push","value","console","log","drawGrid","field","fieldWidth","offsetWidth","fieldHeight","offsetHeight","cellWidth","toFixed","cellHeight","Math","sqrt","divElem","createElement","className","innerHTML","cellClass","x","y","z","posX","posY","centerX","centerY","length","append","updateCells","dataArray","forEach","element","data","initField","inputRadius","reqURL","parseInt","getRowArray","axis","index","rowArray","getMovedRow","direction","initialArray","filteredInitArr","filter","elem","valuesArray","map","countZeroes","zeroesArray","Array","fill","newArray","moveArr","entries","getCalculatedRow","initArr","getIndexArr","fieldRadius","indexArr","generateNewArray","incomingArray","resultArray","changeFunction","indexVal","bufferRow","getUpdate","movedHexGridArray","calculatedHexGridArray","updatedHexGridArray","addNewCellData","gameOverCheck","then","count","baseURL","initialDataReq","target","logKey","e","code","getDirection","addEventListener","closest"],"mappings":";AASC,aATD,eAAeA,EAAWC,EAAKC,GACzBC,IAAAA,QAAiBC,MAAMH,EAAK,CAC9BI,OAAQ,OACRC,KAAMC,KAAKC,UAAUN,KAKhBO,aAFYN,EAASO,OAG7B,OAAA,eAAA,QAAA,aAAA,CAAA,OAAA,IAAA,QAAA,WAAA;;ACKA,aAAA,OAAA,eAAA,QAAA,aAAA,CAAA,OAAA,IAAA,QAAA,WAAA,EAAA,QAAA,oBAAA,EAAA,QAAA,oBAAA,EAdD,MAAMJ,EAAOK,SAASC,cAAc,QAEpC,SAASC,EAAWC,GACZR,EAAKM,cAAcE,IACvBR,EAAKM,cAAcE,GAAWC,SAIlC,SAASC,EAAoBC,GAC3BC,eAAeC,QAAQ,eAAgBZ,KAAKC,UAAUS,IAGxD,SAASG,IACAb,OAAAA,KAAKc,MAAMH,eAAeI,QAAQ;;ACiN1C,aAAA,OAAA,eAAA,QAAA,aAAA,CAAA,OAAA,IAAA,QAAA,UAAA,EAAA,QAAA,YAAA,EAAA,QAAA,SAAA,EAAA,QAAA,UAAA,EA9ND,IAAA,EAAA,QAAA,aAGA,EAAA,QAAA,gBAIA,IAEIC,EAFAC,EAAkB,EAClBC,EAAe,GAEfC,GAAW,EAEf,SAASC,EAAcH,GACfI,MAAAA,EAAYJ,EACZK,EAAY,GAEb,IAAA,IAAIC,GAAKF,EAAWE,EAAIF,EAAY,EAAGE,GAAK,EAC1C,IAAA,IAAIC,GAAKH,EAAWG,EAAIH,EAAY,EAAGG,GAAK,EAC1C,IAAA,IAAIC,GAAKJ,EAAWI,EAAIJ,EAAY,EAAGI,GAAK,EAC3CF,EAAIC,EAAIC,GAAK,GACfH,EAAUI,KAAK,CACRH,EAAAA,EACAC,EAAAA,EACAC,EAAAA,EACIE,MATL,IAgBPL,OADPM,QAAQC,IAAIP,GACLA,EAGT,SAASQ,EAASR,EAAWL,GACrBc,MAAAA,EAAQ3B,SAASC,cAAc,eAC/B2B,EAAaD,EAAME,YACnBC,EAAcH,EAAMI,aAKpBC,GAAwB,GAFbJ,GAAgC,EAAlBf,EAAsB,KAEpBoB,QAAQ,GACnCC,GAAeF,EAAYG,KAAKC,KAAK,GAAM,GAAGH,QAAQ,GACtDI,EAAUrC,SAASsC,cAAc,OACvCD,EAAQE,UAAY,WACpBF,EAAQG,UAAa,GAEjBC,IAUAC,EAAGC,EAAGC,EAAGrB,EACTsB,EAAMC,EAXNL,EAAY,QAER5B,OAAAA,GACD,KAAA,EACH4B,EAAY,QACZ,MACG,KAAA,EACHA,EAAY,QAKZM,IAAAA,EAAUnB,EAAa,EACvBoB,EAAUlB,EAAc,EAEvB,IAAA,IAAIX,EAAI,EAAGA,EAAID,EAAU+B,OAAQ9B,KACnCuB,EAAGC,EAAGC,EAAGrB,GAAS,CACjBL,EAAUC,GAAGuB,EACbxB,EAAUC,GAAGwB,EACbzB,EAAUC,GAAGyB,EACb1B,EAAUC,GAAGI,OAEfsB,EAAY,EAAJH,EAAQV,EAAa,EAAIe,EAAUf,EAAY,EACvDc,IAAUH,EAAIC,GAAKV,EAAc,EAAIc,EAAUd,EAAa,EAC5DG,EAAQG,gCACMC,0BACElB,sBACJmB,sBACAC,sBACAC,2BACKC,aAAgBC,SAAYvB,GAAS,iBAGlDvB,SAASC,cAAc,eAChB,EAAA,EAAA,YAAA,aAEb0B,EAAMuB,OAAOb,GACbrC,SAASC,cAAc,gBAAgBuC,0BAA0BzB,EAAW,YAAc,YAG5F,SAASoC,EAAYjC,EAAWkC,GAC9BlC,EAAUmC,QAASC,IACjBF,EAAUC,QAASE,IAEfD,EAAQZ,IAAMa,EAAKb,GAAKY,EAAQX,IAAMY,EAAKZ,GAAKW,EAAQV,IAAMW,EAAKX,IAEnEU,EAAQ/B,MAAQgC,EAAKhC,WAM7B,SAASiC,EAAUC,EAAaF,EAAMG,GAM7B5C,OALPD,EAAkB8C,SAASF,GAAe,EAC1C3C,EAAeE,EAAcH,GAC7BD,EAAU8C,EACVP,EAAYrC,EAAcyC,GAC1B7B,EAASZ,EAAcD,GAChBC,EAGT,SAAS8C,EAAYC,EAAMC,EAAOxD,GAC1ByD,MAAAA,EAAW,GAMVA,OALPzD,EAAM+C,QAASC,IACTA,EAAQO,KAAUC,GACpBC,EAASzC,KAAKgC,KAGXS,EAKT,SAASC,EAAYD,EAAUE,GACvBC,MAAAA,EAAe,IAAIH,GACnBI,EAAkBD,EAAaE,OAAOC,GAAQA,EAAK9C,MAAQ,GAC3D+C,EAAcH,EAAgBlB,QAAUkB,EAAgBI,IAAIF,GAAQA,EAAK9C,QAAU,GACnFiD,EAAcN,EAAajB,OAASqB,EAAYrB,OAChDwB,EAAc,IAAIC,MAAMF,GAAaG,KAAK,GAC1CC,EAAWX,EAAY,IAAIQ,KAAgBH,GAAe,IAAIA,KAAgBG,GAC9EI,EAAU,IAAId,GACf,IAAA,MAAOD,EAAOvC,KAAUsD,EAAQC,UACnCvD,EAAMA,MAAQqD,EAASd,GAElBe,OAAAA,EAGT,SAASE,EAAiBhB,EAAUE,GAC5Be,MAAAA,EAAU,IAAIjB,GAEhBE,GAAAA,EACG,IAAA,IAAI9C,EAAI6D,EAAQ/B,OAAS,EAAG9B,EAAI,EAAGA,IAClC6D,EAAQ7D,GAAGI,QAAUyD,EAAQ7D,EAAI,GAAGI,QACtCyD,EAAQ7D,GAAGI,OAASyD,EAAQ7D,EAAI,GAAGI,MACnCyD,EAAQ7D,EAAI,GAAGI,MAAQ,QAItB,IAAA,IAAIJ,EAAI,EAAGA,EAAI6D,EAAQ/B,OAAQ9B,IAC9B6D,EAAQ7D,EAAI,GAAGI,QAAUyD,EAAQ7D,GAAGI,QACtCyD,EAAQ7D,EAAI,GAAGI,OAASyD,EAAQ7D,GAAGI,MACnCyD,EAAQ7D,GAAGI,MAAQ,GAIlByD,OAAAA,EAGT,SAASC,EAAYC,GACbC,MAAAA,EAAW,GACZ,IAAA,IAAIhE,EAAmB,EAAd+D,EAAiB/D,EAAI+D,EAAa/D,IAC9CgE,EAAS7D,KAAKH,GAETgE,OAAAA,EAGT,SAASC,EAAiBvB,EAAMqB,EAAajB,EAAWoB,EAAeC,EAAaC,GAC5EJ,MAAAA,EAAWF,EAAYC,GAExB,IAAA,IAAIM,KAAYL,EAAU,CACzBpB,IACA0B,EAAYF,EADD3B,EAAYC,EAAM2B,EAAUH,GACFpB,GACzCqB,EAAYhE,QAAQmE,IAIxB,SAASC,EAAU7B,EAAMqB,EAAajB,GAChC0B,IAAAA,EAAoB,GACpBC,EAAyB,GACzBC,EAAsB,GAanB/E,OAXPsE,EAAiBvB,EAAMqB,EAAajB,EAAWnD,EAAc6E,EAAmB3B,GAChFoB,EAAiBvB,EAAMqB,EAAajB,EAAW0B,EAAmBC,EAAwBb,GAC1FK,EAAiBvB,EAAMqB,EAAajB,EAAW2B,EAAwBC,EAAqBd,GAE5Fe,EAAeD,GAKfnE,EAJAZ,EAAe+E,EAIQhF,GACvBE,EAAWgF,EAAcjF,EAAcoE,GAChCpE,EAGT,SAASgF,EAAeT,IACXzE,EAAAA,EAAAA,YAAAA,EAASyE,EAAcjB,OAAOC,GAAQA,EAAK9C,MAAQ,IAAIyE,KAAKlG,IACrEuF,EAAcd,IAAIF,IAChBvE,EAAOuD,QAAQE,IAEXc,EAAK3B,IAAMa,EAAKb,GAAK2B,EAAK1B,IAAMY,EAAKZ,GAAK0B,EAAKzB,IAAMW,EAAKX,IAE1DyB,EAAK9C,MAAQgC,EAAKhC,aAO5B,SAASwE,EAAcV,EAAeH,GAChCe,IAAAA,EAAQ,EACNd,MAAAA,EAAWF,EAAYC,GAExB,IAAA,IAAIrB,IAAQ,CAAC,IAAK,IAAK,KAC1B,IAAK,IAAI2B,KAAYL,EAAU,CACzBpB,IAAAA,EAAWH,EAAYC,EAAM2B,EAAUH,GACtC,IAAA,IAAIlE,EAAI,EAAGA,EAAI4C,EAASd,OAAQ9B,IAC/B4C,EAAS5C,GAAGI,QAAUwC,EAAS5C,EAAI,GAAGI,OAA+B,IAAtBwC,EAAS5C,GAAGI,OAC7D0E,IAKD,OADPzE,QAAQC,IAAIwE,IACJA;;AC7JV,aAhEA,IAAA,EAAA,QAAA,wBACA,EAAA,QAAA,uBAKA,MAAMC,EAAU,6BAChB,IACIhB,EADA3F,EAAY,GAEZuB,EAAe,GAEnB,MAAMnB,EAAOK,SAASC,cAAc,QASpC,SAASkG,EAAeC,GAChB1C,MAAAA,KAAYwC,KAAWE,EAAO7E,SAEzBmC,EAAAA,EAAAA,YAAAA,EAAQnE,GAAWyG,KAAMlG,GAClCgB,GAAe,EAAUsF,EAAAA,WAAAA,EAAO7E,MAAOzB,EAAQ4D,IAInD,SAAS2C,EAAOC,GACd9E,QAAQC,IAAI6E,EAAEC,MAGhB,SAASC,EAAaF,GAEZA,OADRD,EAAOC,GACCA,EAAEC,MACH,IAAA,OAEHzF,GAAe,EAAU,EAAA,WAAA,IAAKoE,GAAa,GAC3C,MACG,IAAA,OAEHpE,GAAe,EAAU,EAAA,WAAA,IAAKoE,GAAa,GAC3C,MACG,IAAA,OAEHpE,GAAe,EAAU,EAAA,WAAA,IAAKoE,GAAa,GAC3C,MACG,IAAA,OAEHpE,GAAe,EAAU,EAAA,WAAA,IAAKoE,GAAa,GAC3C,MACG,IAAA,OAEHpE,GAAe,EAAU,EAAA,WAAA,IAAKoE,GAAa,GAC3C,MACG,IAAA,OAEHpE,GAAe,EAAU,EAAA,WAAA,IAAKoE,GAAa,GAC3C,MACF,QACE,QAhDNvF,EAAK8G,iBAAiB,QAAS,SAAUH,GACjCF,MAAAA,EAASE,EAAEF,OACXA,EAAOM,QAAQ,iBACnBxB,EAAckB,EAAO7E,MACrB4E,EAAeC,MAgDnBpG,SAASyG,iBAAiB,UAAWD","file":"main.4fe6b59b.js","sourceRoot":"..","sourcesContent":["async function serverComm(URL, fieldData) {\r\n  let response = await fetch(URL, {\r\n    method: \"POST\",\r\n    body: JSON.stringify(fieldData),\r\n  });\r\n\r\n  let result = await response.json();\r\n  // console.log(result);\r\n  return result;\r\n}\r\n\r\nexport {\r\n  serverComm\r\n};\r\n","const body = document.querySelector(\"body\");\r\n\r\nfunction removeElem(elemClass) {\r\n  if (!!body.querySelector(elemClass)) {\r\n    body.querySelector(elemClass).remove();\r\n  }\r\n}\r\n\r\nfunction setSessionGridArray(array) {\r\n  sessionStorage.setItem(\"hexGridArray\", JSON.stringify(array));\r\n}\r\n\r\nfunction getSessionGridArray() {\r\n  return JSON.parse(sessionStorage.getItem(\"hexGridArray\"));\r\n}\r\n\r\nexport { removeElem, setSessionGridArray, getSessionGridArray };\r\n","import {\r\n  removeElem\r\n} from \"./helpers\";\r\nimport {\r\n  serverComm\r\n} from \"./serverComm\";\r\n\r\nlet elemCoefficient = 1;\r\nlet hexGridArray = [];\r\nlet gameURL;\r\nlet gameOver = false;\r\n\r\nfunction generateField(elemCoefficient) {\r\n  const fieldSize = elemCoefficient;\r\n  const gridArray = [];\r\n  const value = 0;\r\n  for (let i = -fieldSize; i < fieldSize + 1; i += 1) {\r\n    for (let j = -fieldSize; j < fieldSize + 1; j += 1) {\r\n      for (let k = -fieldSize; k < fieldSize + 1; k += 1) {\r\n        if (i + j + k == 0) {\r\n          gridArray.push({\r\n            'x': i,\r\n            'y': j,\r\n            'z': k,\r\n            'value': value,\r\n          });\r\n        }\r\n      }\r\n    }\r\n  }\r\n  console.log(gridArray);\r\n  return gridArray;\r\n}\r\n\r\nfunction drawGrid(gridArray, elemCoefficient) {\r\n  const field = document.querySelector(\".game-field\");\r\n  const fieldWidth = field.offsetWidth;\r\n  const fieldHeight = field.offsetHeight;\r\n\r\n  const elemRadius = elemCoefficient * 2 - 1;\r\n  const cellSize = fieldWidth / (elemCoefficient * 4 + 1);\r\n\r\n  const cellWidth = (cellSize * 2).toFixed(2);\r\n  const cellHeight = ((cellWidth * Math.sqrt(3)) / 2).toFixed(2);\r\n  const divElem = document.createElement(\"div\");\r\n  divElem.className = \"hex-grid\";\r\n  divElem.innerHTML = ``;\r\n\r\n  let cellClass = \"css-2\";\r\n\r\n  switch (elemCoefficient) {\r\n    case 2:\r\n      cellClass = \"css-3\";\r\n      break;\r\n    case 3:\r\n      cellClass = \"css-4\";\r\n  }\r\n\r\n  let x, y, z, value;\r\n  let posX, posY;\r\n  let centerX = fieldWidth / 2;\r\n  let centerY = fieldHeight / 2;\r\n\r\n  for (let i = 0; i < gridArray.length; i++) {\r\n    [x, y, z, value] = [\r\n      gridArray[i].x,\r\n      gridArray[i].y,\r\n      gridArray[i].z,\r\n      gridArray[i].value,\r\n    ];\r\n    posX = (x * 3 * cellWidth) / 4 + centerX - cellWidth / 2;\r\n    posY = ((-y + z) * cellHeight) / 2 + centerY - cellHeight / 2;\r\n    divElem.innerHTML += `\r\n    <div class=\"${cellClass}\" \r\n      data-value=\"${value}\" \r\n      data-x=\"${x}\" \r\n      data-y=\"${y}\" \r\n      data-z=\"${z}\" \r\n      style=\"left: ${posX}px; top: ${posY}px;\">${value || \"\"}</div>\r\n    `;\r\n  }\r\n  if (!!document.querySelector(\".hex-grid\")) {\r\n    removeElem(\".hex-grid\");\r\n  }\r\n  field.append(divElem);\r\n  document.querySelector(\".game-status\").innerHTML=`Game Status: ${gameOver ? 'Game Over' : 'Playing'}`;\r\n}\r\n\r\nfunction updateCells(gridArray, dataArray) {\r\n  gridArray.forEach((element) => {\r\n    dataArray.forEach((data) => {\r\n      const result =\r\n        element.x === data.x && element.y === data.y && element.z === data.z;\r\n      if (!!result) {\r\n        element.value = data.value;\r\n      }\r\n    });\r\n  });\r\n}\r\n\r\nfunction initField(inputRadius, data, reqURL) {\r\n  elemCoefficient = parseInt(inputRadius) - 1;\r\n  hexGridArray = generateField(elemCoefficient);\r\n  gameURL = reqURL;\r\n  updateCells(hexGridArray, data);\r\n  drawGrid(hexGridArray, elemCoefficient);\r\n  return hexGridArray;\r\n}\r\n\r\nfunction getRowArray(axis, index, array) {\r\n  const rowArray = [];\r\n  array.forEach((element) => {\r\n    if (element[axis] === index) {\r\n      rowArray.push(element);\r\n    }\r\n  });\r\n  return rowArray;\r\n}\r\n\r\n// **\r\n// direction Boolean  - true for positive / false for negative\r\nfunction getMovedRow(rowArray, direction) {\r\n  const initialArray = [...rowArray];\r\n  const filteredInitArr = initialArray.filter(elem => elem.value > 0);\r\n  const valuesArray = filteredInitArr.length && filteredInitArr.map(elem => elem.value) || [];\r\n  const countZeroes = initialArray.length - valuesArray.length;\r\n  const zeroesArray = new Array(countZeroes).fill(0);\r\n  const newArray = direction ? [...zeroesArray, ...valuesArray] : [...valuesArray, ...zeroesArray];\r\n  const moveArr = [...rowArray];\r\n  for (const [index, value] of moveArr.entries()) {\r\n    value.value = newArray[index];\r\n  }\r\n  return moveArr;\r\n}\r\n\r\nfunction getCalculatedRow(rowArray, direction) {\r\n  const initArr = [...rowArray];\r\n  // console.log(`111: ${JSON.stringify(initArr)}`);\r\n  if (direction) {\r\n    for (let i = initArr.length - 1; i > 0; i--) {\r\n      if (initArr[i].value === initArr[i - 1].value) {\r\n        initArr[i].value += initArr[i - 1].value;\r\n        initArr[i - 1].value = 0;\r\n      }\r\n    }\r\n  } else {\r\n    for (let i = 1; i < initArr.length; i++) {\r\n      if (initArr[i - 1].value === initArr[i].value) {\r\n        initArr[i - 1].value += initArr[i].value;\r\n        initArr[i].value = 0;\r\n      }\r\n    }\r\n  }\r\n  return initArr;\r\n}\r\n\r\nfunction getIndexArr(fieldRadius) {\r\n  const indexArr = [];\r\n  for (let i = -fieldRadius + 1; i < fieldRadius; i++) {\r\n    indexArr.push(i);\r\n  }\r\n  return indexArr;\r\n}\r\n\r\nfunction generateNewArray(axis, fieldRadius, direction, incomingArray, resultArray, changeFunction) {\r\n  const indexArr = getIndexArr(fieldRadius);\r\n\r\n  for (let indexVal of indexArr) {\r\n    let rowArray = getRowArray(axis, indexVal, incomingArray);\r\n    let bufferRow = changeFunction(rowArray, direction);\r\n    resultArray.push(...bufferRow);\r\n  }\r\n}\r\n\r\nfunction getUpdate(axis, fieldRadius, direction) {\r\n  let movedHexGridArray = [];\r\n  let calculatedHexGridArray = [];\r\n  let updatedHexGridArray = [];\r\n\r\n  generateNewArray(axis, fieldRadius, direction, hexGridArray, movedHexGridArray, getMovedRow);\r\n  generateNewArray(axis, fieldRadius, direction, movedHexGridArray, calculatedHexGridArray, getCalculatedRow);\r\n  generateNewArray(axis, fieldRadius, direction, calculatedHexGridArray, updatedHexGridArray, getCalculatedRow);\r\n\r\n  addNewCellData(updatedHexGridArray);\r\n  hexGridArray = updatedHexGridArray;\r\n\r\n  // console.log(`333: ${JSON.stringify(hexGridArray)}`);\r\n  // console.log(`444: ${JSON.stringify(updatedHexGridArray)}`);\r\n  drawGrid(hexGridArray, elemCoefficient);\r\n  gameOver = gameOverCheck(hexGridArray, fieldRadius);\r\n  return hexGridArray;\r\n}\r\n\r\nfunction addNewCellData(incomingArray) {\r\n  serverComm(gameURL, incomingArray.filter(elem => elem.value > 0)).then(result => {\r\n    incomingArray.map(elem => {\r\n      result.forEach(data => {\r\n        const result =\r\n          elem.x === data.x && elem.y === data.y && elem.z === data.z;\r\n        if (!!result) {\r\n          elem.value = data.value;\r\n        }\r\n      });\r\n    });\r\n  });\r\n}\r\n\r\nfunction gameOverCheck(incomingArray, fieldRadius) {\r\n  let count = 0;\r\n  const indexArr = getIndexArr(fieldRadius)\r\n\r\n  for (let axis of ['x', 'y', 'z'])\r\n    for (let indexVal of indexArr) {\r\n      let rowArray = getRowArray(axis, indexVal, incomingArray);\r\n      for (let i = 1; i < rowArray.length; i++) {\r\n        if (rowArray[i].value === rowArray[i - 1].value || rowArray[i].value === 0) {\r\n          count++\r\n        };\r\n      }\r\n    }\r\n  console.log(count);\r\n  return !count;\r\n}\r\n\r\nexport {\r\n  initField,\r\n  updateCells,\r\n  drawGrid,\r\n  getUpdate\r\n};\r\n","import {serverComm} from \"./modules/serverComm\";\r\nimport {\r\n  initField as gameField,\r\n  getUpdate\r\n} from \"./modules/gameField\";\r\n\r\nconst baseURL = \"http://51.15.207.127:13337\";\r\nlet fieldData = [];\r\nlet fieldRadius;\r\nlet hexGridArray = [];\r\n\r\nconst body = document.querySelector(\"body\");\r\nbody.addEventListener(\"click\", function (e) {\r\n  const target = e.target;\r\n  if (!!target.closest(\".radius-btn\")) {\r\n    fieldRadius = target.value;\r\n    initialDataReq(target);\r\n  }\r\n});\r\n\r\nfunction initialDataReq(target) {\r\n  const reqURL = `${baseURL}/${target.value}`;\r\n\r\n  serverComm(reqURL, fieldData).then((result) =>\r\n    hexGridArray = gameField(target.value, result, reqURL)\r\n  );\r\n}\r\n\r\nfunction logKey(e) {\r\n  console.log(e.code);\r\n}\r\n\r\nfunction getDirection(e) {\r\n  logKey(e);\r\n  switch (e.code) {\r\n    case \"KeyW\":\r\n      // direction = \"x+\";\r\n      hexGridArray = getUpdate(\"x\", fieldRadius, true);\r\n      break;\r\n    case \"KeyS\":\r\n      // direction = \"x-\";\r\n      hexGridArray = getUpdate(\"x\", fieldRadius, false);\r\n      break;\r\n    case \"KeyE\":\r\n      // direction = \"y+\";\r\n      hexGridArray = getUpdate(\"y\", fieldRadius, true);\r\n      break;\r\n    case \"KeyA\":\r\n      // direction = \"y-\";\r\n      hexGridArray = getUpdate(\"y\", fieldRadius, false);\r\n      break;\r\n    case \"KeyD\":\r\n      // direction = \"z+\";\r\n      hexGridArray = getUpdate(\"z\", fieldRadius, true);\r\n      break;\r\n    case \"KeyQ\":\r\n      // direction = \"z-\";\r\n      hexGridArray = getUpdate(\"z\", fieldRadius, false);\r\n      break;\r\n    default:\r\n      return;\r\n  }\r\n}\r\n\r\ndocument.addEventListener(\"keydown\", getDirection);\r\n\r\n"]}