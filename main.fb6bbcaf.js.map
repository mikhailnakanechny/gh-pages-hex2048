{"version":3,"sources":["js/modules/serverComm.js","js/modules/helpers.js","js/modules/grawGrid.js","js/modules/gameField.js","js/main.js"],"names":["serverComm","URL","fieldData","response","fetch","method","body","JSON","stringify","result","json","document","querySelector","removeElem","elemClass","remove","setSessionGridArray","array","sessionStorage","setItem","getSessionGridArray","parse","getItem","getRowArray","axis","index","rowArray","forEach","element","push","normalizeGridArray","incomingArray","normalArray","normalizedArray","elem","some","item","i","x","y","z","splice","getIndexArr","fieldRadius","indexArr","isEqualArr","arr1","arr2","length","drawGrid","gridArray","elemCoefficient","gameOver","field","fieldWidth","offsetWidth","fieldHeight","offsetHeight","elemRadius","cellSize","cellWidth","toFixed","cellHeight","Math","sqrt","divElem","createElement","className","innerHTML","cellClass","value","posX","posY","centerX","centerY","append","hexGridArray","gameURL","initField","inputRadius","data","reqURL","parseInt","generateField","updateCells","fieldSize","j","k","dataArray","getMovedRow","direction","moveArr","filteredInitArr","filter","valuesArray","map","countZeroes","zeroesArray","Array","fill","newArray","entries","getCalculatedRow","initArr","generateNewArray","resultArray","changeFunction","rawArray","indexVal","bufferRow","getUpdate","options","movedHexGridArray","calculatedHexGridArray","updatedHexGridArray","addNewCellData","then","gameOverCheck","count","baseURL","addEventListener","e","target","closest","initialDataReq","getDirection","code"],"mappings":";;AIAA;;AACA;;;AFDA,AFAA,eAAeA,UAAf,CAA0BC,GAA1B,EAA+BC,SAA/B,EAA0C;AIG1C,AJFE,MIEIqH,AJFApH,OIEO,CJFC,EIEE,CJFC,MAAMC,KAAK,CAACH,GAAD,EAAM,UIElC;AACA,AFFA,AFAII,IIEAH,AJFAG,KEAK4C,CFAC,EAAE,CIEC,GAAG,CFFhB,CEEA,AFFkBC,AFDgB,SEClC,EAA6BC,eAA7B,EAA8CC,QAA9C,EAAwD;AEGxD,AFFE,AFAE9C,IIEAqC,AJFArC,IEAI+C,AFAA,EAAE9C,GEAG,CFAC,CIEd,AJFeC,CEACG,QAAQ,AFAd,CEAeC,AFAAV,SAAf,IEAM,CAAuB,aAAvB,CAAd;AEGF,AFFE,AFHgC,GAAN,CIKxB0E,AJLF,IEGMtB,QEEQ,EFFE,CEEC,EAAnB,AFFqBD,KAAK,CAACE,WAAzB;AEIF,AFHE,ADLF,ADME,MIEIjD,AHRAA,ADMAG,EEDE+C,EEGE,AHRA,EDME,CIEC7C,AHRAA,EDME,IEDI,EEGE,AHRA,ADMAR,CIECS,AFHAyC,ADLAzC,KCKK,CAAC6C,CFCC,CAAC/C,IAAT,CIER,AHRA,CGQuB,AHRA,ADMlC,CANwC,CAOxC,EEFA,EEGW,AHRA,CGQb,AHRA;AGSAJ,AFFE,IEEE,CAACkH,GFFG9D,UAAU,GEElB,AFFqBP,CEEC,OAAtB,EAA+B,KFFK,GAAG,CAAlB,CEEoBsE,CAAV,CFFY,CEEC,AFF1C;AEGA,AFFA,ADNF,ADME,QIEMC,AFFA/D,CDNC9C,ADMAJ,KIEK,CJFZ,CEAc,CEECgH,CAAC,CAACC,AFFApE,ADNnB,CAAoBxC,KGQlB,IFF2B,ADN7B,EAA+B,ECMEqC,eAAe,GAAG,CAAlB,GAAsB,CAA1B,CAA3B;ACRF,ADUE,ADPA,ADMD,MCNK,CAAC,CCOCS,ADPAtD,IAAI,CAACM,ICOI,GAAG,CAAC+C,KDPb,CAAmB7C,ECOE,GAAG,CAAZ,EAAe+C,CDP3B,CAAN,EAAqC,GCOnB,CAAuB,CAAvB,CAAlB;AECA,AFAA,ADPEvD,IAAAA,EGOE,CAAC,CAACoH,AFAA5D,ADPA,CAAClD,KGOK,CAAC+G,GFAG,GAAG,CEAb,AFAe/D,ADPnB,CGOmB,AHPA9C,QCOS,CDP5B,ECO+BiD,ADPDhD,EGO1B,CAAN,CFAqC,CEAA,AFACiD,CDPpC,GCO+B,CAAU,CAAV,CAAb,GAA6B,CAA9B,EAAiCH,OAAjC,CAAyC,CAAzC,CAAnB;AECElB,ADXJ,ADWE,ADPC,IGOCA,IFAIsB,OEAO,AFAA,AFDAjE,GICG0H,AFAA/G,MEAM,CAAC2D,CFAC,CAACJ,GEAvB,UFAc,CAAuB,KAAvB,CAAhB;AECE0D,AFAF3D,ADPD,ECOCA,EEAE2D,KFAK,CAACzD,QEAQ,CAACuD,AFAjB,GAAoB,GEAJ,CAAd,MFAF;AECC,ADZH,ADYEzD,EAAAA,OAAO,CAACG,SAAR,GAAqB,EAArB;AECD,AFCC,ADRF,CGCA,KFOMC,GDRGrD,MCQM,GAAG,OAAhB,GDRF,CAA6BC,KAA7B,EAAoC;AAClCC,EAAAA,cAAc,CAACC,OAAf,CAAuB,cAAvB,EAAuCZ,IAAI,CAACC,SAAL,CAAeS,KAAf,CAAvC;AGQF,AFCE,ADRD,SGOQ2G,CFCCzE,aEDV,CAAwBuE,CFCtB,KEDF,EAAgC;AAC9B,ADdF,ADeI,ICfAvE,ICcI8B,CFCC,CAAL,IEDU,GAAI,EDdC,CCcCsC,EDdE,CAAtB,ICc4B,IAAGG,MAAM,CAACpD,KAAM,EAA1C;AAEA,ADfF,ADeMD,ADRN,IEPIO,EDeEP,GDRGjD,MCQM,CCfC,EDeE,CCfC,EAAnB,IDeM,EEAO6D,CHRb,GAA+B,EGQ7B,EAAmB/E,SAAnB,EAA8BkH,IAA9B,CAAoC3G,MAAD,IACjCmE,YAAY,GAAG,0BAAU8C,MAAM,CAACpD,KAAjB,EAAwB7D,MAAxB,EAAgCwE,MAAhC,CADjB;AAGD,ADjBD,ADeM,ADRJ,IEPEJ,KFOKtE,EEPT,EFOa,CAACc,KAAL,CAAWH,cAAc,CAACI,OAAf,CAAuB,cAAvB,CAAX,CAAP;AENF,AFOC,IEPG8B,QAAQ,GAAG,KAAf;ACkBA,ADjBA,ADcI,ICdApB,KCiBK6F,AFHA,CAAL,KCdJ,MCiBA,CAAsBJ,CAAtB,EAAyB;AACvB,AFHIpD,ADPN,MCOMA,GDPG9C,CGUCkG,CAAC,CAACK,GFHG,CEGb,EFHgB,EDPlB,CAAqBtG,ICOf,ADPN,EAA2BC,KAA3B,EAAkCR,KAAlC,EAAyC;AGWrC,ADjBJ,ADQE,ADDA,QAAMS,CGUC,ADjBAoD,MCiBL,CHVY,EEPhB,CAAmBC,AFOA,EAAjB,SEPF,EAAgCC,IAAhC,EAAsCC,MAAtC,EAA8C;ACkBxCL,ADjBJzB,AFOAlC,EEPAkC,AFOAlC,IGUI2D,CHVC,CAACjD,OAAN,CAAeC,CEPA,CCiBC,EDjBEsD,CCiBC,EHVL,IAAa,CEPD,CAACH,WAAD,CAAR,GAAwB,CAA1C,ECiB6B,GAAV,EAAepC,WAAf,EAA4B,CAA5B,CAAf;AACA,ADjBJiC,ADcA,ADPE,EEPFA,IDcItC,CAAJ,CDPMV,CCOCW,CAAP,EAAUC,CAAV,CCdY,CDcC8B,ADPA,CAAC9C,CEPC2D,GDcf,ADPa,CAAP,KAAkB1D,IEPI,CAAC0B,AFO3B,EAA6B,aEPH,CAA5B;AACAnB,ADcA,ADPIN,EEPJM,IDcIuC,ADPA7C,ICOJ,EAAU8C,CCdC,CFOC,CAAC3C,CEPCtB,ADcd,GDPI,CEPc,AFOAqB,CEPCP,KAAL,CAAWd,AFOrB,IEPyB,CAACC,SAAL,CAAeoE,YAAf,CAAX,CAAd;ACiBE,ADhBFC,ADcA,ADPG,EEPHA,IDcIJ,GEEG,ADhBA,GAAGQ,CDcC,EEET,CFFY3B,ECdd,QDcwB,GAAG,CAA3B;AEGIsB,ADhBJQ,ADcA,ADPC,EEPDA,CFGA,GGaIR,AFFAF,OCdO,ADcA,CCdCE,EDcEpB,EEEE,GAAG,KDhBR,CDcc,CCdCwB,EDcE,CAA5B,CCdW,CAAX,cCgB6B,GAAV,EAAerC,WAAf,EAA4B,CAA5B,CAAf;AACA,ADhBJ,AFOA,SAAOjB,QAAP,QEPSkD,YAAT,EAAuBzB,eAAvB,EAAwCC,QAAxC;AACA,ADcA,ADPD,OCOM,ECdEwB,EDcEvC,CAAC,GAAG,CAAb,EAAgBA,CAAC,ECdjB,CDcoBa,SAAS,CAACF,MAA9B,EAAsCX,CAAC,EAAvC,EAA2C;AEEzC,ADfH,ADcG,KAACC,CAAD,EAAIC,CECC,AFDL,EAAOC,CAAP,EAAU8B,CECV,IFDA,IAAmB,CACjBpB,SAAS,CAACb,CAAD,CAAT,CAAaC,CADI,EAEjBY,SAAS,CAACb,CAAD,CAAT,CAAaE,CAFI,EAGjBW,SAAS,CAACb,CAAD,CAAT,CAAaG,CAHI,EAIjBU,SAAS,CAACb,CAAD,CAAT,CAAaiC,KAJI,CAAnB;AEEEM,AFIFL,ADZJ,ICYIA,EEJEK,EFIE,CDZC9C,ECYGQ,CAAC,GAAG,CAAJ,EEJM,CFIEsB,EEJC,MHRrB,CCYW,ADZiB7B,GCYK,CAAtB,GAA0B0C,MDZrC,CCYW,CDZgCzC,ECYI4B,EEJhB,GAAV,EAAejB,EFIoB,ADZxD,EAAwD,CCYG,CAAvD,KEJiB,EAA4B,CAA5B,CAAf;AACA,ADfN,ADmBI6B,ADZF,ICYEA,EDZEvC,ECYE,CCnBCkD,EDmBG,CAAC3C,CAAC,GAAGD,CAAL,IAAUuB,ADZD,CEPrB,CAAuBX,CFOC,EAAtB,KCYS,GAAyB,CAAzB,GCnBX,ADmBwCuB,ECnBA,KDmB7B,GAAuCZ,UAAU,GAAG,CAA3D;AClBF,ADmBEG,ADZFlC,EAAAA,ECYEkC,ICnBIoB,GDmBG,CAACjB,GDZG,CAACzC,CEPC,GAAGwB,CDmBhB,EDZF,CAAsBjB,CCYE,GDZE,IAAI,GEP9B;ACeE,ADdF,AFOE,QEPIgB,AFOAzB,CGOC,IHPL,EGOA,EDda,GAAG,ADmBA4C,ECnBlB,ODmB4B;AEJxBO,ADdJ,AFQE5C,IAAAA,EGME4C,EDdEN,KAAK,EFQE,CERC,AFQAnC,CERd,CCcgB,EHNd,CGMiB,AHNA,CCWCmC,KAAM,IDXGlC,IAAV,EAAgBC,CAAhB,EAAmB,OGMT,GAAV,EAAeM,WAAf,EAA4B,CAA5B,CAAf;AACA,AHNE,aAAQP,IAAI,CCWFE,ADXGA,CCWD,ADXJ,IAAUJ,IAAI,CAACI,CAAf,IAAoBF,IAAI,CAACG,CAAL,IAAUL,IAAI,CAACK,CAAnC,IAAwCH,IAAI,CAACI,CAAL,IAAUN,IAAI,CAACM,CAAxD,IAA8D,EAAEf,KAAK,GAAGY,CAAV,CAArE;AERN,AFSK,KAFH,EEPG,IAAIA,CAAC,GAAG,CAACgD,EDoBE9C,CAAE,MCpBlB,EAAyBF,CAAC,GAAGgD,SAAS,GAAG,CAAzC,EAA4ChD,CAAC,EAA7C,EAAiD;ACe/C,ADdA,AFSAJ,IAAAA,KGKK,ADdA,IAAIqD,CAAC,CCcV,EDdaD,CDoBC7C,CAAE,ADXD,CAACC,METhB,AFSA,CAAuBhB,CETC6D,CAAC,GAAG,AFS5B,CET6BD,CFSC,CAA9B,EAAiCnD,IAAjC,CET4B,GAAa,CAAzC,EAA4CoD,CAAC,EAA7C,EAAiD;ACe/CV,ADdA,AFSH,GAPD,GGYIA,KDdK,IAAIW,CAAC,ECcE,CDdCF,ECcE,EFMEd,IAAK,CCpBtB,EAAwBgB,CAAC,GAAG,CAACF,IDoBIb,IAAK,CCpBV,GCcH,ADdgB,CAAzC,ECce,ADd6Be,CAAC,ADoBAjB,CENf3B,CDd9B,EAAiD,CDoBC,IAAI,EAAG,CEN1C,EAA4B,CAA5B,CAAf;AACA,ADdE,AFSN,OCIE,EDJKV,GETGI,CAAC,GAAGiD,CAAJ,GAAQC,CAAR,GFSV,CETuB,CAAjB,EAAoB;AAClBrC,ADoBP,ADXF,UETSA,SAAS,CAACrB,IAAV,CAAe;ACcrB,ADbQ,SCaH,MAAL,EDbaQ,CADQ;ACenBuC,ADbM,ADmBV,ADVF,MGIMA,AFMA,CAAC,CAACjE,CDVC+B,OCUO,CCnBC4C,ADmBA1E,CENC,ADfO,EFWzB,CGIqB,AHJA+B,SCUb,CAAuB,CDV/B,EAAkC,QCU1B,CAAN,EAA2C,EENd,GAAV,EAAeA,WAAf,EAA4B,CAA5B,CAAf;AACA,ADbM,ADmBR,ADVF,QAAMC,QAAQ,CETC2C,CAHQ,CFYN,EAAjB,QCUa,WAAX;AClBQ,ADmBT,qBCnBkBjB;ACajB,ADjBqB,AFavB,OAAK,IEbG,AFaCjC,CAAC,GAAG,CAACM,WAAD,GAAe,CAA5B,EAA+BN,CAAC,GAAGM,WAAnC,EAAgDN,CAAC,EAAjD,EAAqD;AGKjD,ADZG,ADkBPgB,ADVET,ECUFS,EDVET,GCUG,CAAC+B,IDVI,CAAC9C,CCUX,CAAaoC,EDVX,CAAc5B,CAAd,GCUF;AE1BA,ADSK,ADkBL1B,ADVC,ECUDA,QAAQ,CAACC,aAAT,CAAuB,cAAvB,EAAuCwD,SAAvC,GAAoD,gBAAehB,QAAQ,GAAG,WAAH,GAAiB,SAAU,EAAtG;AELD,ADZI,ADkB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","file":"main.fb6bbcaf.js","sourceRoot":"..","sourcesContent":["async function serverComm(URL, fieldData) {\r\n  let response = await fetch(URL, {\r\n    method: \"POST\",\r\n    body: JSON.stringify(fieldData),\r\n  });\r\n\r\n  let result = await response.json();\r\n  // console.log(JSON.stringify(result));\r\n  return result;\r\n}\r\n\r\nexport default serverComm;\r\n\r\n","const body = document.querySelector(\"body\");\r\n\r\nfunction removeElem(elemClass) {\r\n  if (!!body.querySelector(elemClass)) {\r\n    body.querySelector(elemClass).remove();\r\n  }\r\n}\r\n\r\nfunction setSessionGridArray(array) {\r\n  sessionStorage.setItem(\"hexGridArray\", JSON.stringify(array));\r\n}\r\n\r\nfunction getSessionGridArray() {\r\n  return JSON.parse(sessionStorage.getItem(\"hexGridArray\"));\r\n}\r\n\r\nfunction getRowArray(axis, index, array) {\r\n  const rowArray = [];\r\n  array.forEach((element) => {\r\n    if (element[axis] === index) {\r\n      rowArray.push(element);\r\n    }\r\n  });\r\n  return rowArray;\r\n}\r\n\r\nfunction normalizeGridArray(incomingArray, normalArray) {\r\n  let normalizedArray = [];\r\n  incomingArray.forEach(elem => {\r\n    let index;\r\n\r\n    normalArray.some(function (item, i) {\r\n        return (item.x == elem.x && item.y == elem.y && item.z == elem.z) && ~(index = i);\r\n      });\r\n    normalizedArray.splice(index, 0, elem);\r\n  });\r\n  return normalizedArray;\r\n}\r\n\r\nfunction getIndexArr(fieldRadius) {\r\n  const indexArr = [];\r\n  for (let i = -fieldRadius + 1; i < fieldRadius; i++) {\r\n    indexArr.push(i);\r\n  }\r\n  return indexArr;\r\n}\r\n\r\nfunction isEqualArr(arr1, arr2) {\r\n  for (let i = 0; i < arr1.length; ++i) {\r\n    if (JSON.stringify(arr1[i]) != JSON.stringify(arr2[i])) return false;\r\n  }\r\n  return true;\r\n}\r\n\r\nexport {\r\n  removeElem,\r\n  setSessionGridArray,\r\n  getSessionGridArray,\r\n  getRowArray,\r\n  normalizeGridArray,\r\n  getIndexArr,\r\n  isEqualArr\r\n};\r\n","import {removeElem} from \"./helpers\";\r\n\r\nfunction drawGrid(gridArray, elemCoefficient, gameOver) {\r\n  const field = document.querySelector(\".game-field\");\r\n  const fieldWidth = field.offsetWidth;\r\n  const fieldHeight = field.offsetHeight;\r\n\r\n  const elemRadius = elemCoefficient * 2 - 1;\r\n  const cellSize = fieldWidth / (elemCoefficient * 4 + 1);\r\n\r\n  const cellWidth = (cellSize * 2).toFixed(2);\r\n  const cellHeight = ((cellWidth * Math.sqrt(3)) / 2).toFixed(2);\r\n  const divElem = document.createElement(\"div\");\r\n  divElem.className = \"hex-grid\";\r\n  divElem.innerHTML = ``;\r\n\r\n  let cellClass = \"css-2\";\r\n\r\n  switch (elemCoefficient) {\r\n    case 2:\r\n      cellClass = \"css-3\";\r\n      break;\r\n    case 3:\r\n      cellClass = \"css-4\";\r\n  }\r\n\r\n  let x, y, z, value;\r\n  let posX, posY;\r\n  let centerX = fieldWidth / 2;\r\n  let centerY = fieldHeight / 2;\r\n\r\n  for (let i = 0; i < gridArray.length; i++) {\r\n    [x, y, z, value] = [\r\n      gridArray[i].x,\r\n      gridArray[i].y,\r\n      gridArray[i].z,\r\n      gridArray[i].value,\r\n    ];\r\n    posX = (x * 3 * cellWidth) / 4 + centerX - cellWidth / 2;\r\n    posY = ((z - y) * cellHeight) / 2 + centerY - cellHeight / 2;\r\n    divElem.innerHTML += `\r\n      <div class=\"${cellClass}\" \r\n        data-value=\"${value}\" \r\n        data-x=\"${x}\" \r\n        data-y=\"${y}\" \r\n        data-z=\"${z}\" \r\n        style=\"left: ${posX}px; top: ${posY}px;\">${value || \"\"}</div>\r\n      `;\r\n  }\r\n  if (!!document.querySelector(\".hex-grid\")) {\r\n    removeElem(\".hex-grid\");\r\n  }\r\n  field.append(divElem);\r\n  document.querySelector(\".game-status\").innerHTML = `Game Status: ${gameOver ? 'Game Over' : 'Playing'}`;\r\n}\r\n\r\nexport default drawGrid;\r\n","import serverComm from \"./serverComm\";\r\nimport drawGrid from \"./grawGrid\";\r\nimport {getRowArray, normalizeGridArray, getIndexArr, isEqualArr} from \"./helpers\";\r\n\r\nlet elemCoefficient = 1;\r\nlet hexGridArray = [];\r\nlet gameURL;\r\nlet gameOver = false;\r\nlet normalArray;\r\n\r\nfunction initField(inputRadius, data, reqURL) {\r\n  elemCoefficient = parseInt(inputRadius) - 1;\r\n  hexGridArray = generateField(elemCoefficient);\r\n  normalArray = JSON.parse(JSON.stringify(hexGridArray));\r\n  gameURL = reqURL;\r\n  updateCells(hexGridArray, data);\r\n  drawGrid(hexGridArray, elemCoefficient, gameOver);\r\n  return hexGridArray;\r\n}\r\n\r\nfunction generateField(elemCoefficient) {\r\n  const fieldSize = elemCoefficient;\r\n  const gridArray = [];\r\n  const value = 0;\r\n  for (let i = -fieldSize; i < fieldSize + 1; i++) {\r\n    for (let j = fieldSize; j > -fieldSize - 1; j--) {\r\n      for (let k = fieldSize; k > -fieldSize - 1; k--) {\r\n        if (i + j + k == 0) {\r\n          gridArray.push({\r\n            'x': i,\r\n            'y': j,\r\n            'z': k,\r\n            'value': value,\r\n          });\r\n        }\r\n      }\r\n    }\r\n  }\r\n  return gridArray;\r\n}\r\n\r\nfunction updateCells(gridArray, dataArray) {\r\n  gridArray.forEach((element) => {\r\n    dataArray.forEach((data) => {\r\n      const result =\r\n        element.x === data.x && element.y === data.y && element.z === data.z;\r\n      if (!!result) {\r\n        element.value = data.value;\r\n      }\r\n    });\r\n  });\r\n}\r\n\r\n// **\r\n// direction Boolean  - true for positive / false for negative\r\nfunction getMovedRow(rowArray, direction, axis) {\r\n  const moveArr = JSON.parse(JSON.stringify(rowArray));\r\n  const filteredInitArr = moveArr.filter(elem => elem.value > 0);\r\n  if (!filteredInitArr.length) return moveArr;\r\n  const valuesArray = filteredInitArr.length && filteredInitArr.map(elem => elem.value) || [];\r\n  const countZeroes = moveArr.length - valuesArray.length;\r\n  const zeroesArray = new Array(countZeroes).fill(0);\r\n  const newArray = direction ? [...valuesArray, ...zeroesArray] : [...zeroesArray, ...valuesArray];\r\n  for (const [index, value] of moveArr.entries()) {\r\n    value.value = newArray[index];\r\n  }\r\n  return moveArr;\r\n}\r\n\r\nfunction getCalculatedRow(rowArray, direction) {\r\n  const initArr = JSON.parse(JSON.stringify(rowArray));\r\n  if (direction) {\r\n    for (let i = initArr.length - 1; i > 0; i--) {\r\n      if (initArr[i].value === initArr[i - 1].value) {\r\n        initArr[i].value += initArr[i - 1].value;\r\n        initArr[i - 1].value = 0;\r\n      }\r\n    }\r\n  } else {\r\n    for (let i = 1; i < initArr.length; i++) {\r\n      if (initArr[i - 1].value === initArr[i].value) {\r\n        initArr[i - 1].value += initArr[i].value;\r\n        initArr[i].value = 0;\r\n      }\r\n    }\r\n  }\r\n  return initArr;\r\n}\r\n\r\nfunction generateNewArray(axis, fieldRadius, direction, incomingArray, resultArray, changeFunction) {\r\n  const indexArr = getIndexArr(fieldRadius);\r\n  const rawArray = [];\r\n  for (let indexVal of indexArr) {\r\n    let rowArray = getRowArray(axis, indexVal, incomingArray);\r\n    let bufferRow = changeFunction(rowArray, direction, axis);\r\n    rawArray.push(...bufferRow);\r\n  }\r\n  let normalizedArray = normalizeGridArray(rawArray, normalArray);\r\n  resultArray.push(...normalizedArray);\r\n}\r\n\r\nfunction getUpdate(axis, fieldRadius, direction) {\r\n  const options = [axis, fieldRadius, direction]\r\n  let movedHexGridArray = [];\r\n  let calculatedHexGridArray = [];\r\n  let updatedHexGridArray = [];\r\n  generateNewArray(...options, hexGridArray, movedHexGridArray, getMovedRow);\r\n  generateNewArray(...options, movedHexGridArray, calculatedHexGridArray, getCalculatedRow);\r\n  // check changes in cells array\r\n  if (isEqualArr(calculatedHexGridArray, hexGridArray)) {\r\n    return;\r\n  }\r\n  generateNewArray(...options, calculatedHexGridArray, updatedHexGridArray, getMovedRow);\r\n\r\n  addNewCellData(updatedHexGridArray).then(result => {\r\n    hexGridArray = result;\r\n    gameOver = gameOverCheck(hexGridArray, fieldRadius);\r\n    drawGrid(hexGridArray, elemCoefficient, gameOver);\r\n  });\r\n}\r\n\r\nfunction addNewCellData(incomingArray) {\r\n  let newArray = serverComm(gameURL, incomingArray.filter(elem => elem.value > 0)).then(result => {\r\n    incomingArray.map(elem => {\r\n      result.forEach(data => {\r\n        const result =\r\n          elem.x === data.x && elem.y === data.y && elem.z === data.z;\r\n        if (!!result) {\r\n          elem.value = data.value;\r\n        }\r\n      });\r\n    });\r\n    return incomingArray;\r\n  })\r\n  return newArray;\r\n}\r\n\r\nfunction gameOverCheck(incomingArray, fieldRadius) {\r\n  let count = 0;\r\n  const indexArr = getIndexArr(fieldRadius)\r\n\r\n  for (let axis of ['x', 'y', 'z'])\r\n    for (let indexVal of indexArr) {\r\n      let rowArray = getRowArray(axis, indexVal, incomingArray);\r\n      for (let i = 1; i < rowArray.length; i++) {\r\n        if (rowArray[i].value === rowArray[i - 1].value || rowArray[i].value === 0) {\r\n          count++\r\n        };\r\n      }\r\n    }\r\n  return !count;\r\n}\r\n\r\nexport {\r\n  initField,\r\n  updateCells,\r\n  drawGrid,\r\n  getUpdate\r\n};\r\n","import serverComm from \"./modules/serverComm\";\r\nimport {initField as gameField, getUpdate} from \"./modules/gameField\";\r\n\r\nconst baseURL = \"http://51.15.207.127:13337\";\r\nlet fieldData = [];\r\nlet fieldRadius;\r\nlet hexGridArray = [];\r\n\r\nconst body = document.querySelector(\"body\");\r\nbody.addEventListener(\"click\", function (e) {\r\n  const target = e.target;\r\n  if (!!target.closest(\".radius-btn\")) {\r\n    fieldRadius = target.value;\r\n    initialDataReq(target);\r\n  }\r\n});\r\n\r\nfunction initialDataReq(target) {\r\n  const reqURL = `${baseURL}/${target.value}`;\r\n\r\n  serverComm(reqURL, fieldData).then((result) =>\r\n    hexGridArray = gameField(target.value, result, reqURL)\r\n  );\r\n}\r\n\r\nfunction getDirection(e) {\r\n  switch (e.code) {\r\n    case \"KeyW\":\r\n      hexGridArray = getUpdate(\"x\", fieldRadius, 1);\r\n      break;\r\n    case \"KeyS\":\r\n      hexGridArray = getUpdate(\"x\", fieldRadius, 0);\r\n      break;\r\n    case \"KeyE\":\r\n      hexGridArray = getUpdate(\"y\", fieldRadius, 0);\r\n      break;\r\n    case \"KeyA\":\r\n      hexGridArray = getUpdate(\"y\", fieldRadius, 1);\r\n      break;\r\n    case \"KeyQ\":\r\n      hexGridArray = getUpdate(\"z\", fieldRadius, 1);\r\n      break;\r\n    case \"KeyD\":\r\n      hexGridArray = getUpdate(\"z\", fieldRadius, 0);\r\n      break;\r\n    default:\r\n      return;\r\n  }\r\n}\r\n\r\ndocument.addEventListener(\"keydown\", getDirection);\r\n"]}